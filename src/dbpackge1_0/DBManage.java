package dbpackge1_0;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

/*不足：
 * 	1、连接池不能根据需求改变容量
 *  2、连接池对connection的回收机制比比较粗糙
 *  3、取连接的时候it.remove() 和 it.next() 似乎没有实现线程安全，后序需更正
 */
public class DBManage
{
	public DBPool dbpool;
	
	public DBManage(String driver,String url,String name,String password)
	{
		dbpool = new DBPool(driver,url,name,password);
	}
	
	public ResultSet executeQuery(String que)
	{	//执行查询语句
		Connection conn= dbpool.getConnection();
		Statement st;
		ResultSet rt =null;
		try{
			st = conn.createStatement();
			rt=st.executeQuery(que);
		} catch(SQLException e){
			e.printStackTrace();
		}
		dbpool.backConnection(conn);
		return rt;
	}
	
	public int executeUpdate(String sql)
	{	//执行修改语句
		Connection conn= dbpool.getConnection();
		Statement st;
		int a=0;
		try{
			st=conn.createStatement();
			a= st.executeUpdate(sql);
		} catch(SQLException e){
			e.printStackTrace();
		}
		dbpool.backConnection(conn);
		return a;
	}
	
	public int executeUpdate(String sql,int autoGeneratedKey)
	{	//执行修改语句,返回自增主键值
		Connection conn= dbpool.getConnection();
		Statement st;
		int a=0;
		try{
			st=conn.createStatement();
			st.executeUpdate(sql, autoGeneratedKey);
			ResultSet rt =st.getGeneratedKeys();
			while(rt.next())
				a=rt.getInt(1);
		} catch(SQLException e){
			e.printStackTrace();
		}
		dbpool.backConnection(conn);
		return a;
	}
	
	public ArrayList<String> getPriKey(String tname)
	{
		ArrayList<String> pkname = new ArrayList<String>();
		Connection conn = dbpool.getConnection();
		try {
			DatabaseMetaData dmd = conn.getMetaData();
			ResultSet rt = dmd.getPrimaryKeys(null, null, tname);
			while(rt.next())
			{
				pkname.add(rt.getString("COLUMN_NAME").toLowerCase()); //获取主键并转化成小写
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return pkname;
	}
}
